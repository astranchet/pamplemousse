<script>
var openPhotoSwipe = function(index) {

    var createItemFromImage = function(imgEl) {
        return {
            src: imgEl.getAttribute('data-big-thumbnail'),
            title: imgEl.getAttribute('data-title'),
            w: imgEl.getAttribute('data-w'),
            h: imgEl.getAttribute('data-h'),
            date: imgEl.getAttribute('data-date'),
            age_caption: imgEl.getAttribute('data-age-caption'),
            comments_count: imgEl.getAttribute('data-comments-count'),
            url: imgEl.getAttribute('data-url')
        };
    };

    // parse slide data from DOM elements (children of gallerySelector)
    var parseThumbnailElements = function() {
        var thumbElements = $(".swipe"),
            numNodes = thumbElements.length,
            items = [];

        var linkEl, imgEl;
        for(var i = 0; i < numNodes; i++) {
            linkEl = thumbElements[i];
            // include only element nodes 
            if(linkEl.nodeType !== 1) {
                continue;
            }
            imgEl = linkEl.children[0];
            items.push(createItemFromImage(imgEl));
        }

        return items;
    };

    var pswpElement = document.querySelectorAll('.pswp')[0];
    var items = parseThumbnailElements();
    var options = {
        index: parseInt(index),
        loop: false,
        // Add age in caption
        addCaptionHTMLFn: function(item, captionEl) {
            if(!item.title) {
                captionEl.children[0].innerHTML = '';
                return false;
            }

            if (item.comments_count == 0) {
                comments_invite = 'Commenter';
            } else if (item.comments_count == 1) {
                comments_invite = item.comments_count + ' commentaire';
            } else {
                comments_invite = item.comments_count + ' commentaires';
            }
            comments_invite = '<span class="glyphicon glyphicon-comment"></span> <a href="' + item.url + '">' + comments_invite + '</a>';

            captionEl.children[0].innerHTML = '<span class="right small">' + item.date + '<br />' + comments_invite + '</span>';
            captionEl.children[0].innerHTML += '<b>'+item.title+'<b>';
            captionEl.children[0].innerHTML += '<span class="small"><br />' + item.age_caption + '</span>';
            return true;
        },
        // Share buttons
        shareButtons: [
            {id:'download', label:'Télécharger', url:'\{\{raw_image_url\}\}', download:true}
        ],
    };
    // Initializes and opens PhotoSwipe
    var gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);
    gallery.init();


    gallery.listen('afterChange', function() {
        var gallery = this,
            index = gallery.getCurrentIndex(),
            total = gallery.options.getNumItemsFn();
        if (index+1 == total) {
            var lastDate = $(".swipe img").last()[0].getAttribute("data-date-taken");
            $.get("from/"+lastDate+window.location.search, {}, function(data) {
                if (!data) {
                  $("#load").hide();
                } else {
                  var $content = $(data);
                  for (var i = 0; i < $content.length; i++) {
                    // loop only on element nodes 
                    if($content[i].nodeType !== 1) {
                        continue;
                    }
                    imgEl = $content[i].firstElementChild.firstElementChild;
                    items.push(createItemFromImage(imgEl));
                    // sets a flag that slides should be updated
                    gallery.invalidateCurrItems();
                    // updates the content of slides
                    gallery.updateSize(true);
                  }
                  appendPhotosToGallery($content);
                }
            });
        }
    });

};

var photoswipeParseHash = function() {
    var hash = window.location.hash.substring(1),
    params = {};

    if(hash.length < 5) {
        return params;
    }

    var vars = hash.split('&');
    for (var i = 0; i < vars.length; i++) {
        if(!vars[i]) {
            continue;
        }
        var pair = vars[i].split('=');
        if(pair.length < 2) {
            continue;
        }
        params[pair[0]] = pair[1];
    }

    return params;
};

$(".swipe").on('click', function(e) {
    e.preventDefault();
    var index = $("#gallery .swipe").index($(this));
    openPhotoSwipe(index);
});

// Parse URL and open gallery if it contains #&pid=X
var hashData = photoswipeParseHash();
if(hashData.pid) {
    openPhotoSwipe(hashData.pid - 1);
}
</script>
